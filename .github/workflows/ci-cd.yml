name: CI Workflow

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened, closed]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      MONGO: ${{ secrets.MONGO }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-present

    - name: Run unit tests
      run: npm test

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    needs: test

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master

  slack:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Notify slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
         args: '{\"channel\":\"C071K0XLEDR\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Who:* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'