name: CI-CD

on:
  pull_request:
    branches: [ "staging", "main" ]
    types: [opened, synchronize, reopened, closed]

jobs:
  TESTS-SONARQUBE:
    name: TESTS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    env:
      MONGO: ${{ secrets.MONGO }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: ${{ secrets.PORT }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL}}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Dependencies
      id: Dependencies
      run: npm ci
    - name: Build
      id: Build
      run: npm run build
    - name: Unit Tests
      id: Unit Tests
      run: npm test
    - name: SonarQube Scan
      id: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master

    - name: Report Status
      if: always()
      uses: act10ns/slack@v2.1.0
      with:
        status: ${{ job.status }}

